import osimport subprocessimport reimport webbrowserfrom Component_control.Robot_Def import robotfrom gpiozero import TonalBuzzerfrom gpiozero.tones import Toneimport threadingimport timedef get_system_info():    # 使用 uname 命令获取系统信息    result = subprocess.run(['uname', '-a'], capture_output=True, text=True)    return result.stdoutdef get_wifi_info():    # 使用 iwconfig 命令获取 WIFI 信息    result = subprocess.run(['iwconfig'], capture_output=True, text=True)    output = result.stdout    # 使用正则表达式查找 WIFI 连接的 SSID 和信号强度    match = re.search(r'ESSID:"([^"]+)"', output)    if match:        ssid = match.group(1)    else:        ssid = "未连接"    match = re.search(r'Signal level=(-?\d+) dBm', output)    if match:        signal_level = match    else:        signal_level = "未知"    return f"SSID: {ssid}\n信号强度: {signal_level} dBm"def get_ip_address():    # 使用 ifconfig 命令获取 IP 地址    result = subprocess.run(['ifconfig'], capture_output=True, text=True)    output = result.stdout    # 使用正则表达式查找 IPv4 地址    match = re.search(r'inet (\d+\.\d+\.\d+\.\d+)', output)    if match:        ip_address = match.group(1)    else:        ip_address = "未获取到 IP 地址"    return f"IP 地址: {ip_address}"def main():    system_info = get_system_info()    wifi_info = get_wifi_info()    ip_info = get_ip_address()    content = f"{system_info}\n{wifi_info}\n{ip_info}"    folder_path = "Massages"    file_path = os.path.join(folder_path, "runs.log")    if not os.path.exists(folder_path):        os.makedirs(folder_path)    if os.path.exists(file_path):        os.remove(file_path)    with open(file_path, 'w') as file:        file.write(content)def print_runs_log():    folder_path = "Massages"    file_path = os.path.join(folder_path, "runs.log")    if os.path.exists(file_path):        try:            with open(file_path, 'r') as file:                content = file.read()                print(content)        except Exception as e:            print(f"读取文件时出错: {str(e)}")    else:        print("runs.log 文件不存在。")def robot_movement(robot):    robot.forward(0.3)    time.sleep(1.5)    robot.stop()    robot.backward(0.3)    time.sleep(1.5)    robot.stop()    robot.left(0.3)    time.sleep(1.5)    robot.stop()    robot.right(0.3)    time.sleep(1.5)    robot.stop()def robot_music(makerobo_Buzzer):    makerobo_song_1 = [262, 294, 330, 349, 392, 440, 494]    # 简单的节拍，1表示1/8拍，这里也可以根据实际情况调整    makerobo_beat_1 = [1, 1, 1, 1, 1, 1, 1]    bz = TonalBuzzer(makerobo_Buzzer)    bz.stop()    for i in range(1, len(makerobo_song_1)):  # 播放第一首歌        bz.play(Tone(makerobo_song_1[i]))  # 设置歌曲音符的频率        time.sleep(makerobo_beat_1[i] * 0.5)  # 延迟一个节拍* 0.5秒的音符    bz.stop()def robot_test(robot, makerobo_Buzzer):    # 创建两个线程    music_thread = threading.Thread(target=robot_music, args=(makerobo_Buzzer,))    movement_thread = threading.Thread(target=robot_movement, args=(robot,))    # 启动线程    music_thread.start()    movement_thread.start()    # 等待线程结束    music_thread.join()    movement_thread.join()if __name__ == "__main__":    makerobo_Buzzer = 17    main()    robot = robot()    robot_test(robot, makerobo_Buzzer)    print_runs_log()    # 打开gui界面